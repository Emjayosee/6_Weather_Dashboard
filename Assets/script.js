/* This is the script file to my Weather Dashboard website, assignment 6. It is
organized top down to match the HTML flow.  Much of the CSS styling is self explanatory due to the semantic HTML used in the associated file. */

/*last updated by Michael O'Connor, February 7, 2021*/
/* There was a target visualization and a list of requirements for functionality*/

/* Here is the plan:

[X] On load, display a title and a search window

[X] User enters city name to search, my current location; Toronto is set as the default

[X] On click get weather, the openweathermap.org API is searched for current and forecast weather

[X] Display in cards, generated by JS file

[X] Present current and future conditions for that city

[X] City is added to the search history

[X] Presented with the city name, the date, an icon representation of weather conditions, the temperature the humidity, the wind speed, and the UV index (NOTE UV INDEX NOT AVAILABLE)

[ ] Present UV INDEX as color that indicates whether the conditions are favorable, moderate, or severe

[X] Presented a 5-day forecast that displays the date, an icon representation of weather conditions, the temperature, and the humidity, added other features

[ ] When clicking on a city in the search history present current and future conditions for that city
*/
/* Outstanding Items:

1. HOW CAN I ADD LOCAL STORAGE OF PREVIOUS SEARCHES [X]
2. HOW CAN I REDUCE WHAT I HAVE FOR THE FORECAST TO A LOOP [ ]
3. HOW CAN I DISPLAY THE ICON, AS AN ICON [X]
4. HOW CAN I LINE UP THE BOXES NEXT TO ONE ANOTHER [X]
5. HOW CAN I WORK WITH DATES [x]
6. HOW CAN I CLEAR THE WINDOW WHEN A NEW SEARCH APPEARS [x]
7. HOW CAN I ADD A CLEAR FUNCTION TO THE LIST OF CITIES [ ]
*/

var getCity = null;
var currentDate = new Date();

document.querySelector('#search').addEventListener('click', function () {
    getCity = document.querySelector('#cityName').value;
    getWeatherSearch(getCity);
})

function saveSearch() {
    // Unfinished code as part of clear cities button
        // var renderCities = () => {
        //     $('#getCity').empty();    
    
    // // make sure value wasn't empty
    if (getCity !== "") {
    // get cities searched previously from localstorage, or if not any, set to empty array
    var newCity = JSON.parse(window.localStorage.getItem("citiesSearched")) || [];
    
    if (newCity.indexOf(getCity) <0) {
        newCity.push(getCity);
        window.localStorage.setItem("citiesSearched", JSON.stringify(newCity));
    }
    
    $("#citiesSearched").empty();    // used JQuery
    for (let index = 0; index < newCity.length; index++) {
        const city = newCity[index];
       
        console.log(city)
    
    var cityElement = document.createElement ("button");

        cityElement.innerHTML= city ;
        document.querySelector("#citiesSearched").appendChild(cityElement);
    }
    }

    // Add a "clear" button to page if there is a cities list
//     if (localStorage.length>0){
//         $('#clear-storage').html($('<a id="clear-storage" href="#">clear</a>'));
//     } else {
//         $('#clear-storage').html('');
//     }
// }
}

async function getWeatherSearch(question) {
    // get the current weather from openweathermap
    var fetchUrl = "https://api.openweathermap.org/data/2.5/weather?q=" + question + "&APPID=6547225cae7c6979fe92842a6b897980&units=metric"

    console.log(`.. fetching from ${fetchUrl}`)

    getWeather = await fetch(fetchUrl).then(r => r.json())

    console.log(`. fetched weather data: `, getWeather)

    console.log(`.. showing weather data!`)

    var title = getWeather.name;
    var temp = getWeather.main.temp;
    var feel = getWeather.main.feels_like;
    var desc = getWeather.weather[0].description;
    var humidity = getWeather.main.humidity;
    var wind = getWeather.wind.speed;
    var icon = getWeather.weather[0].icon;
    
   
    console.log(`url: ${temp}`)

    $("#currentWeather").empty();    // used JQuery
    document.querySelector('#currentWeather').innerHTML += `
    <div id="CurrentTitle" class="card2-title style="width: 30rem><h1>Current Weather:</h1></div>
    <div class="card" style="width: 30rem;">
  
        <div class="card-body">
            <h5 class="card-title">${title} - ${currentDate.toDateString()}</h5><h1 class="card-temp"> ${temp} &#8451</h1>
            <img src="http://openweathermap.org/img/wn/${icon}@2x.png">
            <h6 class="card-text">The weather is  ${desc}.</h6>
            <h6 class="card-text">The current temperature is  ${temp} degrees celsius, but it feels like ${feel} degrees celsius.</h6>
            <h6 class="card-text">The humidity is  ${humidity}%.</h6>
            <h6 class="card-text">The wind speed is  ${wind} KPH.</h6>
        </div>
    </div>
    `
    saveSearch()

    getFutureWeatherSearch(question);
}

async function getFutureWeatherSearch(question) {

    // get the forecast weather from openweathermap
    var fetchUrl2 = "https://api.openweathermap.org/data/2.5/forecast?q=" + question + "&APPID=6547225cae7c6979fe92842a6b897980&units=metric"

    getForecast = await fetch(fetchUrl2).then(r => r.json())

    $("#FiveDayTitle").empty();    // used JQuery
    document.querySelector('#FiveDayTitle').innerHTML += `
        <div class="FiveDayTitle style="width: 30rem><h2>Five-Day Forecast:</h2></div>
        `
    
    // means of viewing the obejct in the console (unblock to activate)
       // console.log(`. fetched weather data: `, getForecast)

    // Unfinished code to effect the loop over the forecast dates
        // Loop over all forecasts in 3 hour increments starting at [0]
        // for (let i = 0; i < 5; i++) {
        //     console.log(i)
        //     if (getForecast.list[i].dt_txt.indexOf("15:00:00") !== -1){

    console.log(currentDate)

    var max = getForecast.list[0].main.temp_max;
    var min = getForecast.list[0].main.temp_min;
    var humidity = getForecast.list[0].main.humidity;
    var wind = getForecast.list[0].wind.speed;
    var icon = getForecast.list[0].weather[0].icon;


    $("#forecastPlus1").empty();    // used JQuery
    document.querySelector("#forecastPlus1").innerHTML += `
    
        <div class="card" style="width: 11rem;">
        
            <div class="card-body">
                <h4 class="card-title">Tomorrow</h4>
                <img src="http://openweathermap.org/img/wn/${icon}@2x.png">
                <h6 class="card-text">Maximum Temp: ${max}</h6>
                <h6 class="card-text">Minimum Temp: ${min}</h6>
                <h6 class="card-text">Humidity: ${humidity}%</h6>
                <h6 class="card-text">Wind Speed (KPH) ${wind}</h6>
            </div>
        </div>
        `

    var max = getForecast.list[8].main.temp_max;
    var min = getForecast.list[8].main.temp_min;
    var humidity = getForecast.list[8].main.humidity;
    var wind = getForecast.list[8].wind.speed;
    var icon = getForecast.list[8].weather[0].icon;

    
    $("#forecastPlus2").empty();    // used JQuery
    document.querySelector('#forecastPlus2').innerHTML += `
        <div class="card" style="width: 11rem;">
            
            <div class="card-body">
                <h4 class="card-title">+ 2 Days</h4>
                <img src="http://openweathermap.org/img/wn/${icon}@2x.png">
                <h6 class="card-text">Maximum Temp ${max}</h6>
                <h6 class="card-text">Minimum Temp ${min}</h6>
                <h6 class="card-text">Humidity: ${humidity}%</h6>
                <h6 class="card-text">Wind Speed (KPH) ${wind}</h6>
            </div>
        </div>`
        
        var max = getForecast.list[16].main.temp_max;
    var min = getForecast.list[16].main.temp_min;
    var humidity = getForecast.list[16].main.humidity;
    var wind = getForecast.list[16].wind.speed;
    var icon = getForecast.list[16].weather[0].icon

    $("#forecastPlus3").empty();    // used JQuery
    document.querySelector('#forecastPlus3').innerHTML += `
        <div class="card" style="width: 11rem;">
            
            <div class="card-body">
                <h4 class="card-title">+ 3 Days</h4>
                <img src="http://openweathermap.org/img/wn/${icon}@2x.png">
                <h6 class="card-text">Maximum Temp ${max}</h6>
                <h6 class="card-text">Minimum Temp ${min}</h6>
                <h6 class="card-text">Humidity: ${humidity}%</h6>
                <h6 class="card-text">Wind Speed (KPH) ${wind}</h6>
            </div>
        </div>`
        
    var max = getForecast.list[24].main.temp_max;
    var min = getForecast.list[24].main.temp_min;
    var humidity = getForecast.list[24].main.humidity;
    var wind = getForecast.list[24].wind.speed;
    var icon = getForecast.list[24].weather[0].icon

    $("#forecastPlus4").empty();    // used JQuery
    document.querySelector('#forecastPlus4').innerHTML += `
        <div class="card" style="width: 11rem;">
            
            <div class="card-body">
                <h4 class="card-title">+ 4 Days</h4>
                <img src="http://openweathermap.org/img/wn/${icon}@2x.png">
                <h6 class="card-text">Maximum Temp ${max}</h6>
                <h6 class="card-text">Minimum Temp ${min}</h6>
                <h6 class="card-text">Humidity: ${humidity}%</h6>
                <h6 class="card-text">Wind Speed (KPH) ${wind}</h6>
            </div>
        </div>`

    var max = getForecast.list[32].main.temp_max;
    var min = getForecast.list[32].main.temp_min;
    var humidity = getForecast.list[32].main.humidity;
    var wind = getForecast.list[32].wind.speed;
    var icon = getForecast.list[32].weather[0].icon

    
    $("#forecastPlus5").empty();    // used JQuery
    document.querySelector('#forecastPlus5').innerHTML += `
        <div class="card" style="width: 11rem;">
            
            <div class="card-body">
                <h4 class="card-title">+ 5 Days</h4>
                <img src="http://openweathermap.org/img/wn/${icon}@2x.png">
                <h6 class="card-text">Maximum Temp ${max}</h6>
                <h6 class="card-text">Minimum Temp ${min}</h6>
                <h6 class="card-text">Humidity: ${humidity}%</h6>
                <h6 class="card-text">Wind Speed (KPH) ${wind}</h6>
            </div>
        </div>`
        }

// Unfinished code for the rerunning of poreviosuly searched cities
    // Previously searched Cities event listener
    // var citiesSearched = null;

    // $('citiesSearched').on("click",function (event) {
    //         event.preventDefault();
    //         $('#cityName').val(event.target.textContent);
    //         getCity = $('#cityName').val();
    //         getWeatherSearch(event);
    //     });
    //  console.log(cityName)

    // Clear old searched cities from localStorage event listener
    // $("#clear-storage").on("click", (event) => {
    //     localStorage.clear();
    //     renderCities();
    // });

    // // Render the searched cities
    // renderCities();
